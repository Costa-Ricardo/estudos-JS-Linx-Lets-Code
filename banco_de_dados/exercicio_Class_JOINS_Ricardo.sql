-- CRIANDO O BANCO
CREATE DATABASE Sistema_Estoque
DEFAULT CHARACTER SET utf8 
DEFAULT COLLATE utf8_general_ci;

USE Sistema_Estoque;

-- CRIANDO AS TABELAS 
CREATE TABLE Categorias(
	Id INT NOT NULL AUTO_INCREMENT,
    
    Nome VARCHAR(50) NOT NULL,
    Ativa CHAR(1) NOT NULL,
    
    CONSTRAINT PK_Categorias PRIMARY KEY (Id)
);

CREATE TABLE Produtos(
	Id INT NOT NULL AUTO_INCREMENT,
    
    Id_Categoria INT,
    
    Descricao VARCHAR(250) NOT NULL, 
    Preco DECIMAL(7, 2) NOT NULL,
    URL_Imagem VARCHAR(300), 
    
        
    CONSTRAINT PK_Produtos PRIMARY KEY (Id),
    CONSTRAINT FK_Categoria_Produtos FOREIGN KEY (Id_Categoria) REFERENCES Categorias(Id)
);

-- INSERINDO OS DADOS NA TABELA CATEGORIAS
INSERT INTO Categorias (Nome, Ativa) VALUES ("Informática", "V");
INSERT INTO Categorias (Nome, Ativa) VALUES ("Telefonia", "V");
INSERT INTO Categorias (Nome, Ativa) VALUES ("Games", "V");
INSERT INTO Categorias (Nome, Ativa) VALUES ("TV, Áudio e Video", "V");
INSERT INTO Categorias (Nome, Ativa) VALUES ("Impressão e Imagem", "V");

-- INSERINDO OS DADOS NA TABELA PRODUTOS
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "SSD 128GB", 300);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1,"SSD 256GB", 500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "KIT TECLADO E MOUSE", 600);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (3, "PLAYSTATION 3", 1500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (2, "SAMSUNG A51", 2500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (4, "TELEVISAO LG 55", 3000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (3, "PLAYSTATION 3 1TB", 1500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (2, "SAMSUNG S9", 2500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (2, "IPHONE 8", 2500);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (2, "IPHONE 9", 3000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (2, "IPHONE X", 4000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (4, "TELEVISÃO SAMSUNG 32'", 1000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (4, "TELEVISÃO SAMSUNG 48'", 3000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (3, "PLAYSTATION 4 1TB", 2800);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (3, "PLAYSTATION 5 1TB", 5000);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "Teclado Gamer Razer", 250);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "Fone de ouvido hyperx", 170);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "Mouse Gamer Razer", 90);
INSERT INTO Produtos (Id_Categoria, Descricao, Preco) VALUES (1, "Mouse Gamer Razer 2400dpi", 200);
INSERT INTO Produtos (Descricao, Preco) VALUES ("Mouse Gamer", 280);
INSERT INTO Produtos (Descricao, Preco) VALUES ("Teclado Gamer", 390);

-- exercicio 1
SELECT * FROM PRODUTOS P 
	JOIN CATEGORIAS C ON C.ID = P.ID_CATEGORIA
WHERE P.ID_CATEGORIA IS NOT NULL
ORDER BY P.ID;

-- exercicio 2 
SELECT * FROM PRODUTOS P LEFT JOIN CATEGORIAS C ON C.ID = P.ID_CATEGORIA;

-- exercicio 3
SELECT * FROM PRODUTOS P RIGHT JOIN CATEGORIAS C ON C.ID = P.ID_CATEGORIA ORDER BY P.ID;

-- exercicio 4
SELECT * FROM PRODUTOS P LEFT JOIN CATEGORIAS C ON C.ID = P.ID_CATEGORIA
UNION
SELECT * FROM PRODUTOS P RIGHT JOIN CATEGORIAS C ON C.ID = P.ID_CATEGORIA;

-- exercicio 5
SELECT * FROM CATEGORIAS C
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE ID_CATEGORIA = 1;

-- exercicio 6
SELECT * FROM CATEGORIAS C
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE ID_CATEGORIA = 2
ORDER BY P.DESCRICAO;

-- exercicio 7
SELECT * FROM CATEGORIAS C
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE ID_CATEGORIA = 3;

-- exercicio 8
SELECT * FROM CATEGORIAS C
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE ID_CATEGORIA = 4;

-- exercicio 9
SELECT * FROM CATEGORIAS C JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA ORDER BY C.ID;

-- exercicio 10
SELECT * FROM CATEGORIAS C JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA ORDER BY P.DESCRICAO;

-- exercicio 11
SELECT * FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE P.ID_CATEGORIA = 1 AND P.PRECO < 400
ORDER BY P.PRECO;

-- exercicio 12
SELECT * FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
WHERE P.ID_CATEGORIA = 3 AND P.PRECO BETWEEN 1600 AND 3000
ORDER BY P.PRECO DESC;

-- exercicio 13
SELECT C.ID, C.NOME, COUNT(P.ID_CATEGORIA) AS COUNT FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
GROUP BY C.ID;

-- exercicio 14
SELECT C.ID, C.NOME, SUM(P.PRECO) AS SOMA_PRECOS FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
GROUP BY C.ID;

-- exercicio 15
SELECT C.ID, C.NOME, AVG(P.PRECO) AS AVG_PRECO FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
GROUP BY C.ID;

-- exercicio 16
SELECT C.ID, C.NOME, MIN(P.PRECO) AS MENOR_PRECO FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
GROUP BY C.ID;

-- exercicio 17
SELECT C.ID, C.NOME, MAX(P.PRECO) AS MAIOR_PRECO FROM CATEGORIAS C 
	JOIN PRODUTOS P ON C.ID = P.ID_CATEGORIA
GROUP BY C.ID;